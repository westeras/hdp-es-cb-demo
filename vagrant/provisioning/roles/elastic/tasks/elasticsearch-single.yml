---
- name: Deploy Elasticsearch
  hosts: all
  sudo: true
  vars:
  - kibana_version: 4.0.1
  - kibana_url: https://download.elasticsearch.org/kibana/kibana/kibana-{{ kibana_version }}-linux-x64.tar.gz
  - cb_transport_plugin_version: 2.0.0
  - cb_transport_plugin_url: http://packages.couchbase.com.s3.amazonaws.com/releases/elastic-search-adapter/{{ cb_transport_plugin_version }}/elasticsearch-transport-couchbase-{{ cb_transport_plugin_version }}.zip
  - elasticsearch_version: 1.4.4
  - elasticsearch_url: https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-{{ elasticsearch_version }}.noarch.rpm
  tasks:
  - name: Install epel repo
    yum: name=epel-release state=present

  - name: Install packages
    yum: name={{item}} state=present
    with_items:
      - java
      - openssl-1.0.1e
      - python-pip
      - libselinux-python

  - name: Install httplib2
    pip: name=httplib2

  - name: Download Elasticsearch RPM
    get_url: url=https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-{{ elasticsearch_version }}.noarch.rpm dest=/vagrant/deps/elasticsearch-{{ elasticsearch_version }}.noarch.rpm

  - name: Install Elasticsearch
    yum: name=/vagrant/deps/elasticsearch-{{ elasticsearch_version }}.noarch.rpm

  - name: Install Marvel Plugin
    command: "/usr/share/elasticsearch/bin/plugin -i elasticsearch/marvel/latest --timeout 30s"
    args:
      creates: "/usr/share/elasticsearch/plugins/marvel"

  - name: Install Couchbase Transport Plugin
    command: "/usr/share/elasticsearch/bin/plugin -i transport-couchbase --url {{ cb_transport_plugin_url }} --timeout 30s"
    args:
      creates: "/usr/share/elasticsearch/plugins/transport-couchbase"

  - name: Set Elasticsearch Couchbase configurations
    lineinfile: dest=/etc/elasticsearch/elasticsearch.yml line="{{ item }}" insertafter=EOF state=present
    with_items:
    - "couchbase.username: couchbase"
    - "couchbase.password: couchbase"
    - "network.publish_host: {{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}"

  - name: Start Elasticsearch
    service: name=elasticsearch state=started enabled=yes
    
  - wait_for: port=9200 delay=5

  - name: Upload Couchbase Index template
    uri: url=http://127.0.0.1:9200/_template/couchbase method=PUT body='{{ lookup("file", "demo_couchbase_template.json") }}' status_code=200

  - name: Check Couchbase index exists
    uri: url="http://elasticsearch.demo:9200/demo" method=HEAD
    ignore_errors: True
    register: index_exists

  - name: Create the Couchbase index
    uri: url="http://elasticsearch.demo:9200/demo" method=PUT
    when: index_exists|failed

  - name: Download Kibana
    get_url:
      url="https://download.elasticsearch.org/kibana/kibana/kibana-{{ kibana_version }}-linux-x64.tar.gz"
      dest="/vagrant/deps/kibana-{{ kibana_version }}-linux-x64.tar.gz"
    register: new_archive

  - name: Unarchive Kibana
    unarchive:
      src="/vagrant/deps/kibana-{{ kibana_version }}-linux-x64.tar.gz"
      dest="/usr/share/"
      copy=no

  - name: Add symlink
    command: ln -s /usr/share/kibana-{{ kibana_version }}-linux-x64 /usr/share/kibana creates=/usr/share/kibana 

  - name: Copy Kibana daemon script
    copy: src=kibanad dest=/usr/share/kibana/bin/kibanad owner=root group=root mode=755

  - name: Copy Kibana init script
    copy: src=kibana4 dest=/etc/init.d/kibana4 owner=root group=root mode=755

  - name: Start Kibana
    service: name=kibana4 state=started enabled=yes
